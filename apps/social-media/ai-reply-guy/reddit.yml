name: reddit-reply-bot
apiRevision: edurata.io/v1
description: |
  A bot that searches Reddit for posts containing specified keywords and replies with contextually relevant responses generated using AI, using additional context from Airtable.
interface:
  inputs:
    properties:
      userEmail:
        type: string
        description: The email address of the user of the workflow
      airtableTableId:
        type: string
        description: The Airtable table containing context for generating replies.
  required:
    - userEmail
    - airtableTableId
inputs: 
  airtableTableId: ${variables.applicationConfig.replyBot.peopleTableId}
steps:
  retrieve-context:
    description: |
      Retrieve context data from Airtable to use in generating AI responses.
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: general/axios
    props:
      method: GET
      url: "https://api.airtable.com/v0/${inputs.airtableTableId}"
      headers:
        Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
      params:
        filterByFormula: "email = '${inputs.userEmail}'"
  #https://support.reddithelp.com/hc/en-us/articles/19696541895316-Available-search-features
  prepare-reddit-query:
    description: Takes a string of terms and formats them as a Reddit search query.
    runtime: python3_10
    code: |
      def handler(inputs):
          terms_string = inputs.get("terms_string", "")
          
          terms = [term.strip() for term in terms_string.split(",") if term.strip()]

          # join with selftext:{term} and separated by whitespace
          reddit_query = " ".join([f"selftext:\"{term}\"" for term in terms])
          # add self:true before
          reddit_query = f"self:true {reddit_query}"
          return {
              "reddit_query": reddit_query
          }
    props:
      terms_string: ${retrieve-context.response.data.records[0].fields.searchTerms}
  search-reddit:
    description: |
      Search Reddit for posts that contain the specified keywords.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: GET
      url: https://oauth.reddit.com/search
      headers:
        Authorization: "Bearer ${secrets.REDDIT_ACCESS_TOKEN}"
        User-Agent: "Reddit-Reply-Bot/0.1 by Edurata"
      params:
        q: ${prepare-reddit-query.reddit_query}
        limit: 10
        sort: "top"
  generate-reply:
    model: gpt-4o
    foreach: ${search-reddit.response.data.data.children}
    description: |
      Use AI to generate a contextual reply based on the Reddit post and data from Airtable.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/transform/chatgpt
    props:
      API_KEY: ${secrets.OPENAI_API_KEY}
      systemMessage: |
        Craft a reply to the following Reddit post, impersonating a CTO of a startup managing a digital product.
        Don't be overly friendly or overly formal. Be like a typical redditor just typing this within a minute without much thought.
        Use the following data:
        - Post text: ${each.data.selftext}
        - Business/Product description: ${retrieve-context.response.data.records[0].fields.businessDescription}
        If the digital product is possible to integrate in the response, suggest it but very shortly. 
        The majority of the response should be about the post itself.
        The comment should be no longer than 5 sentences and in general very short.
      message: "Generate a reply."
  post-reply:
    foreach: ${search-reddit.response.data.data.children}
    concurrency: 1 # Ensure we don't hit Reddit's rate limits
    delay: 15 # Delay between requests to avoid rate limits
    description: |
      Post the generated reply to Reddit as a comment on the relevant post.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: POST
      url: "https://oauth.reddit.com/api/comment"
      headers:
        Authorization: "Bearer ${secrets.REDDIT_ACCESS_TOKEN}"
        User-Agent: "Reddit-Reply-Bot/0.1 by Edurata"
        Content-Type: "application/x-www-form-urlencoded"
      data:
        api_type: "json"
        text: "${generate-reply[each.index].response}"
        thing_id: "${each.data.name}"
