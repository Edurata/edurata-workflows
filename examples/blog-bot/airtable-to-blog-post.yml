apiRevision: edurata.io/workflow/v1
name: social-media-post
title: Alternative to services like hootsuite or buffer
schedule: "0 8 * * *"
description: |
  Automates the process of fetching social media post data from Airtable, filtering it based on release date, and posting it to Twitter (X), LinkedIn, and Medium. Uses Google Drive to retrieve images for the posts. The workflow ensures that only unprocessed posts scheduled for release are considered and iterates over them to push content to the appropriate platforms.
interface:
  inputs:
    properties:
      airtable_id:
        type: string
        description: |
          The base id and table id of the airtable to fetch data from.
      img_drive_folder:
        type: string
        description: |
          The folder id of the google drive to fetch the image from.
    required:
      - airtable_base
      - post_table_id
      - img_drive_folder
  outputs:
    properties:
      weather:
        type: string
        description: Weather data
steps:
  get-airtable-data:
    description: |
      Fetches unprocessed social media post data from the specified Airtable base and table using the API. The request filters out records that have already been marked as processed.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      url: "https://api.airtable.com/v0/${inputs.airtable_id}?filterByFormula=NOT(processed)"
      headers:
        Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
  filter-for-release-date:
    description: |
      Filters the retrieved Airtable records to only include those that are scheduled for release but have not been marked as released. The filtering logic checks if today's date is later than the scheduled release date.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/eval-nodejs
    props:
      code: |
        const today = new Date();
        return input.filter(record => {
          if (record.fields.Released || !record.fields.ScheduledFor) {
            return false;
          }
          const releaseDate = new Date(record.fields.ScheduledFor);
          return today > releaseDate;
        });
      input: ${get-airtable-data.response.data.records}
  push-to-x:
    description: |
      Iterates over the filtered Airtable records and posts them to Twitter (X) if the "X" field is defined in the record. Uses API authentication credentials to send the post.
    foreach: ${filter-for-release-date.output}
    if: ${each.fields.X} !== undefined
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/load/tweet
    props:
      API_KEY: ${secrets.TWITTER_API_KEY}
      API_SECRET: ${secrets.TWITTER_API_SECRET}
      ACCESS_TOKEN: ${secrets.TWITTER_ACCESS_TOKEN}
      ACCESS_TOKEN_SECRET: ${secrets.TWITTER_ACCESS_TOKEN_SECRET}
      BEARER_TOKEN: ${secrets.TWITTER_BEARER_TOKEN}
      messages:
        - ${each.response}
  push-to-linkedin:
    description: |
      Iterates over the filtered Airtable records and posts them to LinkedIn if the "Linkedin" field is defined in the record. Uses the LinkedIn API token for authentication.
    foreach: ${filter-for-release-date.output}
    if: ${each.fields.Linkedin} !== undefined
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/load/send-linkedin
    props:
      LINKEDIN_API_TOKEN: ${secrets.LINKEDIN_API_TOKEN}
      text: ${each.response}
      author: urn:li:organization:30718435
  push-to-medium:
    description: |
      Iterates over the filtered Airtable records and posts them to Medium if the "Linkedin" field is defined in the record. Uses the LinkedIn API token for authentication but posts to Medium instead.
    foreach: ${filter-for-release-date.output}
    if: ${each.fields.Linkedin} !== undefined
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/load/send-linkedin
    props:
      LINKEDIN_API_TOKEN: ${secrets.LINKEDIN_API_TOKEN}
      text: ${each.response}
      author: urn:li:organization:30718435
