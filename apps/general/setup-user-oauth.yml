apiRevision: edurata.io/v1
name: setup-microapp-user
title: Setup Bot
description: |
  Setup a bot that uses OAuth after a webhook call from Tally. The first two fields in Tally must be name and email. 
  The fields except data should be filled on deployment as variables or in the webhook.
interface:
  inputs:
    properties:
      data:
        description: |
          The data from the webhook.
        type: object
        properties:
          fields:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                value:
                  type: string
      applicationConfig:
        type: object
        description: |
          A mapping of applicationId to appName, oauthPurposeDescription, oauthSecretName, senderEmail, and deploymentRepoPath.
        properties:
          appName:
            type: string
          oauthPurposeDescription:
            type: string
          oauthSecretName:
            type: string
          senderEmail:
            type: string
          deploymentRepoPath:
            type: string
    required:
      - data
      - applicationConfig
inputs:
  applicationConfig: ${variables.applicationConfig}
steps:
  extract-data-from-event:
    runtime: python3_10
    code: |
      import urllib.parse

      def handler(inputs):
          # Extract applicationId from data fields
          application_id = next((field["value"] for field in inputs["data"] if field["label"] == "applicationId"), None)
          if not application_id:
              raise ValueError("applicationId not found in webhook data")

          name = next((field["value"] for field in inputs["data"] if field["label"] == "name"), None)
          email = next((field["value"] for field in inputs["data"] if field["label"] == "email"), None)

          if not name or not email:
              raise ValueError("Name or email not found in webhook data")

          uri_encoded_email = urllib.parse.quote(email)
          uri_encoded_name = urllib.parse.quote(name)

          return {
              "applicationId": application_id,
              "name": name,
              "email": email,
              "uriEncodedEmail": uri_encoded_email,
              "uriEncodedId": uri_encoded_name + "-" + uri_encoded_email
          }
    props:
      data: ${inputs.data.fields}
  lookup-config-by-application-id:
    runtime: python3_10
    code: |
      def handler(inputs):
          application_id = inputs["applicationId"]
          
          # Look up the configuration for the applicationId
          app_config = inputs["applicationConfig"].get(application_id)
          if not app_config:
              raise ValueError(f"Configuration for applicationId {application_id} not found")
          
          return {
              "appName": app_config["appName"],
              "oauthPurposeDescription": app_config["oauthPurposeDescription"],
              "oauthSecretName": app_config["oauthSecretName"],
              "senderEmail": app_config["senderEmail"],
              "deploymentRepoPath": app_config["deploymentRepoPath"]
          }
    props:
      applicationId: ${extract-data-from-event.applicationId}
      applicationConfig: ${inputs.applicationConfig}
  create-environment:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      url: ${meta.apiUrl}/environment
      method: POST
      headers:
        Authorization: "Bearer ${secrets.EDURATA_API_KEY}"
      data:
        name: "${extract-data-from-event.uriEncodedId}"
  create-deployment:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      url: ${meta.apiUrl}/deployment
      method: POST
      headers:
        Authorization: "Bearer ${secrets.EDURATA_API_KEY}"
      data:
        name: "${extract-data-from-event.uriEncodedId}"
        source: 
          repoUrl: "https://github.com/Edurata/edurata-workflows.git"
          path: ${lookup-config-by-application-id.deploymentRepoPath} 
        environmentId: ${create-environment.response.data.id}
        variables: "{\"userEmail\": \"${extract-data-from-event.email}\"}"
  deploy-deployment:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      url: ${meta.apiUrl}/deployment/${create-deployment.response.data.id}/deploy
      method: POST
      headers:
        Authorization: "Bearer ${secrets.EDURATA_API_KEY}"
  send-oauth-email:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/load/send-ses
    props:
      sender: ${lookup-config-by-application-id.senderEmail}
      to: ${extract-data-from-event.email}
      subject: "${lookup-config-by-application-id.appName}: Authorization needed"
      html_body: >
        Hey ${extract-data-from-event.name}!,
        <br><br>
        We need OAuth permissions to ${lookup-config-by-application-id.oauthPurposeDescription}. Please click <a href="${meta.apiUrl}/oauth/google?s=${lookup-config-by-application-id.oauthSecretName}&u=${meta.userId}&e=${extract-data-from-event.uriEncodedEmail}">here</a> to authorize us.
        You will be redirected to a page where you can authorize the third-party app.

        Best wishes,
        Edurata Team
        <br><br>
      AWS_ACCESS_KEY_ID: ${secrets.SHORT_STORY_KEY}
      AWS_SECRET_ACCESS_KEY: ${secrets.SHORT_STORY_SECRET}
