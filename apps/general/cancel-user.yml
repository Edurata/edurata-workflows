apiRevision: edurata.io/v1
name: delete-microapp-user
title: Deletes a user from a microapp
description: |
  Deletes a user from several systems after a webhook call from Tally.
interface:
  inputs:
    properties:
      data:
        type: object
        properties:
          fields:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                value:
                  type: string
      applicationConfig:
        type: object
        description: |
          A mapping of applicationId to appName, appUrl, senderEmail, and peopleTableId.
        additionalProperties:
          type: object
          properties:
            appName:
              type: string
            appUrl:
              type: string
            senderEmail:
              type: string
            peopleTableId:
              type: string
    required:
      - data
      - applicationConfig
inputs:
  applicationConfig: ${variables.applicationConfig}
steps:
  extract-data-from-event:
    runtime: python3_10
    code: |
      import urllib.parse

      def handler(inputs):
          # Extract applicationId from data fields
          application_id = next((field["value"] for field in inputs["data"] if field["label"] == "applicationId"), None)
          if not application_id:
              raise ValueError("applicationId not found in webhook data")

          name = next((field["value"] for field in inputs["data"] if field["label"] == "name"), None)
          email = next((field["value"] for field in inputs["data"] if field["label"] == "email"), None)

          if not name or not email:
              raise ValueError("Name or email not found in webhook data")

          uri_encoded_email = urllib.parse.quote(email)
          uri_encoded_name = urllib.parse.quote(name)

          return {
              "applicationId": application_id,
              "name": name,
              "email": email,
              "uriEncodedEmail": uri_encoded_email,
              "uriEncodedId": uri_encoded_name + "-" + uri_encoded_email
          }
    props:
      data: ${inputs.data.fields}
  lookup-config-by-application-id:
    runtime: python3_10
    code: |
      def handler(inputs):
          application_id = inputs["applicationId"]
          
          # Look up the configuration for the applicationId
          app_config = inputs["applicationConfig"].get(application_id)
          if not app_config:
              raise ValueError(f"Configuration for applicationId {application_id} not found")
          
          return {
              "appName": app_config["appName"],
              "appUrl": app_config["appUrl"],
              "senderEmail": app_config["senderEmail"],
              "peopleTableId": app_config["peopleTableId"]
          }
    props:
      applicationId: ${extract-data-from-event.applicationId}
      applicationConfig: ${inputs.applicationConfig}
  delete-environment:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      url: ${meta.apiUrl}/environment/byname/${extract-data-from-event.uriEncodedId}
      method: DELETE
      headers:
        Authorization: "Bearer ${secrets.EDURATA_API_KEY}"
  delete-deployment:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      url: ${meta.apiUrl}/deployment/byname/${extract-data-from-event.uriEncodedId}
      method: DELETE
      headers:
        Authorization: "Bearer ${secrets.EDURATA_API_KEY}"
  get-person-data:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      url: 'https://api.airtable.com/v0/${lookup-config-by-application-id.peopleTableId}?filterByFormula=AND(NOT(disabled),{email}="${extract-data-from-event.email}")'
      headers:
        Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
  delete-airtable-record:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      url: https://api.airtable.com/v0/${lookup-config-by-application-id.peopleTableId}/${get-person-data.response.data.records[0].id}
      headers:
        Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
  send-delete-email:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/load/send-ses
    props:
      _delete-deployment: ${delete-deployment}
      _delete-environment: ${delete-environment}
      _delete-airtable-record: ${delete-airtable-record}
      sender: ${lookup-config-by-application-id.senderEmail}
      to: ${extract-data-from-event.email}
      subject: "${lookup-config-by-application-id.appName}: All resources for your subscription were deleted"
      html_body: >
        Hey ${extract-data-from-event.name}!,
        <br><br>
        We have deleted all resources related to your subscription.

        If you want to start a new subscription visit [this link](${lookup-config-by-application-id.appUrl}).

        All the best,
        The Edurata team
        <br><br>
      AWS_ACCESS_KEY_ID: ${secrets.SHORT_STORY_KEY}
      AWS_SECRET_ACCESS_KEY: ${secrets.SHORT_STORY_SECRET}
