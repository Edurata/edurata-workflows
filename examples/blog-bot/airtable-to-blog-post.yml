apiRevision: edurata.io/workflow/v1
name: social-media-post
title: Alternative to services like hootsuite or buffer
schedule: "0 8 * * *"
description: |
  Using airtable to fetch data and google drive to fetch images.
  Using twitter and linkedin to post the data..
interface:
  inputs:
    properties:
      airtable_id:
        type: string
        description: |
          The base id and table id of the airtable to fetch data from...
      img_drive_folder:
        type: string
        description: |
          The folder id of the google drive to fetch the image from.
    required:
      - airtable_base
      - post_table_id
      - img_drive_folder
  outputs:
    properties:
      weather:
        type: string
        description: Weather data
steps:
  get-airtable-data:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      url: "https://api.airtable.com/v0/${inputs.airtable_id}?filterByFormula=NOT(processed)"
      headers:
        Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
  filter-for-release-date:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/eval-nodejs
    props:
      code: |
        const today = new Date();
        return input.filter(record => {
          if (record.fields.Released || !record.fields.ScheduledFor) {
            return false;
          }
          const releaseDate = new Date(record.fields.ScheduledFor);
          return today > releaseDate;
        });
      input: ${get-airtable-data.response.data.records}
  # upload-image-container-insta:
  #   source:
  #     repoUrl: "https://github.com/Edurata/edurata-functions.git"
  #     path: general/axios
  #   props:
  #     url: "${variables.INSTA_BUSINESS_ACC_ID}/media?image_url=${upload-image-s3}&media_type=STORIES"
  #     headers:
  #       Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
  # post-insta-story:
  #   source:
  #     repoUrl: "https://github.com/Edurata/edurata-functions.git"
  #     path: general/axios
  #   props:
  #     url: "${variables.INSTA_BUSINESS_ACC_ID}/media_publish?creation_id=${upload-image-container-insta.response.data.id}"
  #     headers:
  #       Authorization: "Bearer ${secrets.INSTAGRAM_TOKEN}"
  push-to-x:
    foreach: ${filter-for-release-date.output}
    if: ${each.fields.X} !== undefined
    description: Pushing the social post to x
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/load/tweet
    props:
      API_KEY: ${secrets.TWITTER_API_KEY}
      API_SECRET: ${secrets.TWITTER_API_SECRET}
      ACCESS_TOKEN: ${secrets.TWITTER_ACCESS_TOKEN}
      ACCESS_TOKEN_SECRET: ${secrets.TWITTER_ACCESS_TOKEN_SECRET}
      BEARER_TOKEN: ${secrets.TWITTER_BEARER_TOKEN}
      messages:
        - ${each.response}
      # mediaPaths:
      #   - ${each[1]}
  push-to-linkedin:
    foreach: ${filter-for-release-date.output}
    if: ${each.fields.Linkedin} !== undefined
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/load/send-linkedin
    props:
      LINKEDIN_API_TOKEN: ${secrets.LINKEDIN_API_TOKEN}
      text: ${each.response}
      author: urn:li:organization:30718435
      # mediaPaths:
      #   - ${each[1]}
  push-to-medium:
    foreach: ${filter-for-release-date.output}
    if: ${each.fields.Linkedin} !== undefined
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/load/send-linkedin
    props:
      LINKEDIN_API_TOKEN: ${secrets.LINKEDIN_API_TOKEN}
      text: ${each.response}
      author: urn:li:organization:30718435
      # mediaPaths:
      #   - ${each[1]}
