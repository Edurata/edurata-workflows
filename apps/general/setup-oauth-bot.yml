apiRevision: edurata.io/v1
name: setup-invoices-bot
title: Setup Bot
description: |
  Setup a bot that uses oauth after a webhook call from tally.
  The first two fields in tally must be name and email.
  The fields except data should be filled on the deployment as variables or in the webhook.
interface:
  inputs:
    properties:
      app_name:
        type: string
        description: |
          The name of the app.
        example: "Accounting bot"
      app_purpose_description:
        type: string
        description: |
          The purpose of the app as a string for the email.
        example: "forward invoices to your email"
      oauth_secret_name:
        type: string
        description: |
          The name of the secret that will be used to store the oauth secret.
        example: "GMAIL_API_KEY"
      sender:
        type: string
        description: |
          The email address from which the oauth email will be sent.
        example: "accountingbot@edurata.com"
      deployment_repo_path:
        type: string
        description: |
          The path to the deployment file in the repository.
        example: apps/invoice-forwarder/invoices-forward.yml
      data:
        description: |
          The data from the webhook.
        type: object
        properties:
          fields:
            type: array
            items:
              type: object
              properties:
                label:
                  type: string
                value:
                  type: string
steps:
  extract-data-from-event:
    runtime: python3_10
    code: |
      import urllib.parse

      def handler(inputs):
          # Assuming 'inputs' is a dictionary and 'inputs["data"]' is a list of dictionaries
          uri_encoded_email = urllib.parse.quote(inputs["data"][1]["value"])
          return {
              "name": inputs["data"][0]["value"],
              "email": inputs["data"][1]["value"],
              "uriEncodedEmail": uri_encoded_email
          }
    dependencies:
      data: ${inputs.data.fields}
  create-environment:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    dependencies:
      url: ${meta.apiUrl}/environment
      method: POST
      headers:
        Authorization: "Bearer ${secrets.EDURATA_API_KEY}"
      data:
        name: "${extract-data-from-event.email}"
  create-deployment:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    dependencies:
      url: ${meta.apiUrl}/deployment
      method: POST
      headers:
        Authorization: "Bearer ${secrets.EDURATA_API_KEY}"
      data:
        name: "${inputs.app_name} for ${extract-data-from-event.email}"
        source: 
          repoUrl: "https://github.com/Edurata/edurata-workflows.git"
          path: ${inputs.deployment_repo_path} 
        environmentId: ${create-environment.response.data.id}
        variables: "{\"userEmail\": \"${extract-data-from-event.email}\"}"
  deploy-deployment:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    dependencies:
      url: ${meta.apiUrl}/deployment/${create-deployment.response.data.id}/deploy
      method: POST
      headers:
        Authorization: "Bearer ${secrets.EDURATA_API_KEY}"
  send-oauth-email:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/load/send-ses
    dependencies:
      sender: ${inputs.sender}
      to: ${extract-data-from-event.email}
      subject: "${inputs.app_name}: Authorization needed for sending invoices"
      html_body: >
        Hey ${extract-data-from-event.name}!,
        <br><br>
        We need oauth permissions to ${inputs.app_purpose_description}. Please click <a href="${meta.apiUrl}/oauth/google?s=${inputs.oauth_secret_name}&u=${meta.userId}&e=${extract-data-from-event.uriEncodedEmail}">here</a> to authorize us.
        You will be redirected to a page where you can authorize the third party app.

        Best wishes,
        Edurata Team
        <br><br>
      AWS_ACCESS_KEY_ID: ${secrets.SHORT_STORY_KEY}
      AWS_SECRET_ACCESS_KEY: ${secrets.SHORT_STORY_SECRET}
