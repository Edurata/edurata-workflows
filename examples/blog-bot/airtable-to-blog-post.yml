apiRevision: edurata.io/workflow/v1
name: social-media-post
title: Alternative to services like hootsuite or buffer
schedule: 0 8 * * *
description: |
  Automates the process of fetching social media post data from Airtable, filtering it based on release date, and posting it to Twitter (X), LinkedIn, and Medium. Uses Google Drive to retrieve images for the posts. The workflow ensures that only unprocessed posts scheduled for release are considered and iterates over them to push content to the appropriate platforms.
interface:
  inputs:
    properties:
      airtable_id:
        type: string
        description: |
          The base id and table id of the airtable to fetch data from.
      img_drive_folder:
        type: string
        description: |
          The folder id of the google drive to fetch the image from.
    required:
    - airtable_base
    - post_table_id
    - img_drive_folder
  outputs:
    properties:
      weather:
        type: string
        description: Weather data
steps:
  get-airtable-data:
    description: This step retrieves data from a specific Airtable URL, filtering for records that have not been processed, using an authorization key.
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: general/axios
    props:
      url: https://api.airtable.com/v0/${inputs.airtable_id}?filterByFormula=NOT(processed)
      headers:
        Authorization: Bearer ${secrets.AIRTABLE_API_KEY}
  filter-for-release-date:
    description: This step filters out records from the input data that have already been released or do not have a scheduled release date, and only keeps those records that are scheduled for release in the future.
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: general/eval-nodejs
    props:
      code: |
        const today = new Date();
        return input.filter(record => {
          if (record.fields.Released || !record.fields.ScheduledFor) {
            return false;
          }
          const releaseDate = new Date(record.fields.ScheduledFor);
          return today > releaseDate;
        });
      input: ${get-airtable-data.response.data.records}
  push-to-x:
    description: This step pushes a message to platform 'X' if the field 'X' is not undefined for each output from the 'filter-for-release-date' step, using various Twitter API credentials and tokens.
    foreach: ${filter-for-release-date.output}
    if: ${each.fields.X} !== undefined
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: etl/load/tweet
    props:
      API_KEY: ${secrets.TWITTER_API_KEY}
      API_SECRET: ${secrets.TWITTER_API_SECRET}
      ACCESS_TOKEN: ${secrets.TWITTER_ACCESS_TOKEN}
      ACCESS_TOKEN_SECRET: ${secrets.TWITTER_ACCESS_TOKEN_SECRET}
      BEARER_TOKEN: ${secrets.TWITTER_BEARER_TOKEN}
      messages:
      - ${each.response}
  push-to-linkedin:
    description: This step is designed to automatically push content to LinkedIn using the provided API token, text, and author information, for each output filtered by release date, given that the LinkedIn field is not undefined.
    foreach: ${filter-for-release-date.output}
    if: ${each.fields.Linkedin} !== undefined
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: etl/load/send-linkedin
    props:
      LINKEDIN_API_TOKEN: ${secrets.LINKEDIN_API_TOKEN}
      text: ${each.response}
      author: urn:li:organization:30718435
  push-to-medium:
    description: This step pushes content to Medium if the LinkedIn field is not undefined, iterating over each output filtered for release date, using the LinkedIn API token, text response, and a specific author.
    foreach: ${filter-for-release-date.output}
    if: ${each.fields.Linkedin} !== undefined
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: etl/load/send-linkedin
    props:
      LINKEDIN_API_TOKEN: ${secrets.LINKEDIN_API_TOKEN}
      text: ${each.response}
      author: urn:li:organization:30718435
