name: email-unsubscribe-service
apiRevision: edurata.io/workflow/v1
description: The workflow automates the process of identifying and consolidating unsubscribe links from recent emails. It retrieves customer details from a specific Airtable using the user's email. Then, it fetches the 100 most recent emails from the user's Gmail account that match a certain query and were received in the last three months. The workflow extracts unsubscribe links from each email and gathers them into a single list. Finally, it generates an HTML document body containing these links.
interface:
  inputs:
    type: object
    properties:
      userEmail:
        type: string
        description: Email account to scan
    required:
    - userEmail
  outputs:
    type: object
    properties:
      email_sent:
        type: boolean
        description: Indicates if the summary email was successfully sent
inputs:
  customerTableId: ${variables.applicationConfig.unsubscribeBot.peopleTableId}
steps:
  get-customer-details:
    description: This step retrieves customer details from a specific Airtable using a GET request, filtering the data based on the user's email.
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: general/axios
    props:
      method: GET
      url: https://api.airtable.com/v0/${inputs.customerTableId}
      headers:
        Authorization: Bearer ${secrets.AIRTABLE_API_KEY}
      params:
        filterByFormula: email = '${inputs.userEmail}'
  get-recent-emails:
    description: This step retrieves the 100 most recent emails from the user's Gmail account that match a specific query and were received in the last three months, using the Gmail API.
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: general/axios
    props:
      url: https://www.googleapis.com/gmail/v1/users/me/messages
      headers:
        Authorization: Bearer ${secrets.GMAIL_API_KEY}
      params:
        q: after:3m ${inputs.email_query}
        maxResults: 100
  extract-unsubscribe-links:
    foreach: ${get-recent-emails.messages}
    description: This step involves extracting unsubscribe links from each of the recent emails received.
    runtime: python3_10
    code: |
      import re

      def handler(inputs):
          email_body = inputs["email_body"]
          unsubscribe_links = re.findall(r'<a[^>]+href="([^"]+)"[^>]*>Unsubscribe</a>', email_body, re.IGNORECASE)
          return {"unsubscribe_links": unsubscribe_links}
    interface:
      inputs:
        email_body:
          type: string
          description: HTML body of the email
      outputs:
        unsubscribe_links:
          type: array
          items:
            type: string
            description: List of unsubscribe links found in the email
  collect-all-links:
    description: This step involves gathering all necessary links for the workflow process.
    runtime: python3_10
    code: |
      def handler(inputs):
          all_links = []
          for email in inputs["emails"]:
              all_links.extend(email["unsubscribe_links"])
          unique_links = list(set(all_links))  # Remove duplicates
          return {"all_unsubscribe_links": unique_links}
    interface:
      inputs:
        emails:
          type: array
          items:
            type: object
            properties:
              unsubscribe_links:
                type: array
                items:
                  type: string
      outputs:
        all_unsubscribe_links:
          type: array
          items:
            type: string
  generate-html-body:
    description: This step involves creating the body content of an HTML document.
    runtime: python3_10
    code: |
      def handler(inputs):
          links = inputs["all_unsubscribe_links"]
          html_body = "<p>Here are all the unsubscribe links found in your emails from the past 3 months:</p><ul>"
          for link in links:
              html_body += f'<li><a href="{link}">{link}</a></li>'
          html_body += "</ul>"
          return {"html_body": html_body}
    interface:
      inputs:
        all_unsubscribe_links:
          type: array
          items:
            type: string
      outputs:
        html_body:
          type: string
          description: HTML body with unsubscribe links
