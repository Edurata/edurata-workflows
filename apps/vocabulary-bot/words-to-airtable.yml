apiRevision: edurata.io/v1
name: words-to-airtable
title: Vocabulary enricher
description: |
  Takes vocabulary from a document regularly and updates an airtable.
interface:
  inputs:
    properties:

      vocabulary_table_id:
        type: string
        description: |
          The base id + table_id in which to save the vocabulary
      vocabulary_document_name:
        type: string
        description: |
          The ID of the document to retrieve vocabulary from
steps:
  get-new-changes-from-docs:
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/extract/diff-google-docs
    dependencies:
      documentId: ${variables.vocabulary_document_id}
      API_TOKEN: ${secrets.GOOGLE_DOCS_API_KEY}
  extract-vocabulary:
    foreach: ${get-unique-combinations.combinations}
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: etl/transform/chatgpt
    dependencies:
      API_KEY: ${secrets.OPENAI_API_KEY}
      # model: gpt-4o
      systemMessage: |
        You get a text from a google docs document and you should extract vocabulary from that text and return it in an array of words in the extracted language. Only return the array of words.
      message: |
        Extract vocabulary from the following text:
        ${get-new-changes-from-docs.differences}
  parse-from-chatgpt-response:
    runtime: python3_10
    code: |
      import json
      def handler(inputs):
          parsed = json.loads(inputs["extract-vocabulary"]["response"])
          return {
              "words": parsed
          }
    dependencies:
      extract-vocabulary: ${extract-vocabulary}
  update-airtable:
    foreach: ${parse-from-chatgpt-response.words}
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: general/axios
    dependencies:
      method: POST
      url: https://api.airtable.com/v0/${inputs.vocabulary_table_id}/
      headers:
        Authorization: Bearer ${secrets.AIRTABLE_API_KEY}
        Content-Type: application/json
      data:
        fields:
          russian: ${each}
