apiRevision: edurata.io/workflow/v1
name: scrape-images
title: scrape-images
description: Automates the process of scraping images for a list of people and uploading them to an S3 bucket. The workflow retrieves a configuration file containing a list of people and previously processed images, scrapes new images using an external repository, and then uploads the updated processed images list back to the S3 bucket.
schedule: 0 */3 * * *
interface:
  inputs:
    properties:
      cursor:
        type: string
        title: cursor
        description: If specified, starts processing from a specific element in the array.
        default: 0
      limit:
        type: number
        title: limit
        description: Defines the maximum number of elements to process before stopping.
        default: 100
steps:
  get-config:
    description: This step retrieves configuration details such as AWS access keys and bucket name, and specifies files to be accessed in the AWS S3 bucket for further processing.
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: etl/extract/download-s3
    props:
      AWS_ACCESS_KEY_ID: ${secrets.AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${secrets.AWS_SECRET_ACCESS_KEY}
      bucket_name: test-images
      files:
      - key: people.json
      - key: processed-images.json
  scrape-images:
    description: This step involves scraping images using specified dependencies such as limit, people, processed, Google API key, Google Project CX, AWS access key ID, and AWS secret access key.
    timeout: -1
    source:
      repoUrl: https://github.com/juliandm/penetratethecabinet.git
      path: functions/scrape-images
      ref: master
    props:
      limit: ${inputs.limit}
      people: ${get-config.files[0].path}
      processed: ${get-config.files[1].path}
      GOOGLE_API_KEY: ${secrets.GOOGLE_API_KEY}
      GOOGLE_PROJECT_CX: ${variables.GOOGLE_PROJECT_CX}
      AWS_ACCESS_KEY_ID: ${secrets.AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${secrets.AWS_SECRET_ACCESS_KEY}
  upload-config:
    description: This step involves uploading a configuration file to a specified AWS S3 bucket, using provided AWS access keys.
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: etl/load/upload-s3
    props:
      AWS_ACCESS_KEY_ID: ${secrets.AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${secrets.AWS_SECRET_ACCESS_KEY}
      bucket_name: test-images
      files:
      - path: ${scrape-images.processed}
        key: processed-images.json
