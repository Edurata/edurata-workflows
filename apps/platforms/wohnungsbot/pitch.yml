name: wohnungsbot-pitch
apiRevision: edurata.io/v1
description: |
  A bot that scans WG-Gesucht for people who search for flats and recommends the bot to them.
steps:
  get-random-credentials:
    description: |
      Get random credentials from the list of WG-Gesucht logins.
    runtime: python3_10
    code: |
      import random

      def handler(inputs):
          logins = inputs['wgGesuchtLogins']
          return {'login': random.choice(logins)}
    props:
      wgGesuchtLogins: "${secrets.wgGesuchtLogins}"
  search-users:
    description: |
      Fetch users that are searching for flats.
    source:
      repoUrl: "https://github.com/Edurata/edurata-workflows.git"
      path: apps/platforms/wohnungsbot/wg-gesucht/pitch-search
    props:
      city_id: 8
      max_online_hours: 80
      WG_USERNAME: ${get-random-credentials.login.wgUsername}
      WG_PASSWORD: ${get-random-credentials.login.wgPassword}
  generate-recommendations:
    foreach: ${search-users.people_listings}
    description: |
      Generate applications for the filtered flat listings with chatgpt
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: etl/transform/chatgpt
    props:
      API_KEY: ${secrets.OPENAI_API_KEY}
      systemMessage: |
        Empfehle der folgenden person ${each.name} eine Software zu verwenden, die ich (Julian) entwickelt habe. 
        Die Software heißt Wohnungsbot mit der man automatisch bewerbungen auf wohnungsinserate schreiben kann. 
        Die Website ist https://apps.edurata.com/de/wohnungsbot 
        Schreibe auch dazu, dass die Empfehlung AI generiert ist und der wohnungsbot auch so funktioniert.
        Schreibe auch, dass falls fragen aufkommen, die Person mich gerne fragen kann.
        Außerdem bekommt er die volle Funktionalität, weil der Bot gerade ausprobiert wird.
        
        Wenn die Person eine englische Beschreibung hat, schreibe die Empfehlung auf Englisch.
        Steckbrief der Person:
        - Alter der Person: ${each.age}
        - Name: ${each.name}
        - Beschreibung: ${each.description}
      message: "Schreibe die Nachricht an ${each.name}"
  merge-info:
    runtime: python3_10
    description: |
      Merge the flat listings with the generated applications.
    code: |
      def handler(inputs):
          listings = inputs['listings']
          applications = inputs['applications']
          merged_listings = []
          for listing, application in zip(listings, applications):
              merged_listings.append({
                  'listing_url': listing['link'],
                  'recipient_name': listing['name'],
                  'application': application
              })
          return {'merged_listings': merged_listings}
    props:
      listings: "${search-users.people_listings}"
      applications: "${generate-recommendations[*].response}"
  apply-to-listings:  
    description: |
      Automatically apply to the filtered flat listings.
    source:
      repoUrl: "https://github.com/Edurata/edurata-workflows.git"
      path: apps/platforms/wohnungsbot/wg-gesucht/apply
    props:
      WG_USERNAME: ${get-random-credentials.login.wgUsername}
      WG_PASSWORD: ${get-random-credentials.login.wgPassword}
      application_list: ${merge-info.merged_listings}