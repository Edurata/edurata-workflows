name: airtable-blog-to-multiple-platforms
apiRevision: edurata.io/workflow/v1
description: |
  Automates the retrieval of the latest unprocessed blog post from Airtable, checks user settings to determine the enabled publishing platforms, formats the content appropriately for each platform using ChatGPT, and publishes the post to the selected platforms (Reddit, LinkedIn, Twitter/X). After successful publication, the workflow updates Airtable with the URLs of the published posts and marks the post as processed.
interface:
  inputs:
    type: object
    properties:
      user_table_id:
        type: string
        description: "The Airtable ID in the format app/tbl for user"
      blog_posts_table_id:
        type: string
        description: "The Airtable ID in the format app/tbl for blog posts"
      user_email:
        type: string
        description: "The email of the current user"
steps:
  get-user-settings:
    description: |
      Fetches user settings from Airtable to determine which platforms (Reddit, LinkedIn, Twitter/X) are enabled for publishing.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: GET
      url: "https://api.airtable.com/v0/${inputs.user_table_id}"
      headers:
        Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
      params:
        filterByFormula: "{email}='${inputs.user_email}'"
  get-latest-unprocessed-post:
    description: |
      Retrieves the latest blog post from Airtable that has not yet been processed, limiting the response to one post.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: GET
      url: "https://api.airtable.com/v0/${inputs.blog_posts_table_id}"
      headers:
        Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
      params:
        filterByFormula: "AND({status}!='processed')"
        limit: 1
  generate-post-reddit:
    description: |
      Formats the blog post for Reddit by creating a teaser and linking back to the full blog post. Iterates over both the title and content of the retrieved post.
    foreach:
      - "title"
      - "content"
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/transform/chatgpt
    props:
      API_KEY: ${secrets.OPENAI_API_KEY}
      systemMessage: |
        You are going to receive a blog post. Format it so it can be posted with a teaser to reddit and then linking to the blog link. 
        Return only the string ${each}.
      message: ${get-latest-unprocessed-post.response.data.records[0].fields.raw}
  generate-post-linkedin:
    description: |
      Formats the blog post for LinkedIn by creating a summarized teaser.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/transform/chatgpt
    props:
      API_KEY: ${secrets.OPENAI_API_KEY}
      systemMessage: |
        You are going to receive a blog post. Make a summary so it can be posted as a teaser to linkedin.
        Return only the content.
      message: ${get-latest-unprocessed-post.response.data.records[0].fields.raw}
  generate-post-x:
    description: |
      Formats the blog post for Twitter/X by creating a concise teaser suitable for a tweet.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: etl/transform/chatgpt
    props:
      API_KEY: ${secrets.OPENAI_API_KEY}
      systemMessage: |
        You are going to receive a blog post. Make a summary so it can be posted as a teaser to x (formerly twitter).
        Return only the tweet.
      message: ${get-latest-unprocessed-post.response.data.records[0].fields.raw}
  post-to-reddit:
    description: |
      Publishes the formatted post to Reddit if the user has enabled Reddit in their settings. Iterates over all specified subreddits.
    if:
      and:
        - in:
          - "redditPost"
          - ${get-user-settings.response.data.records[0].fields.enabledTargets}
        - "!!": ${get-user-settings.response.data.records[0].fields.subReddits}
    foreach: ${get-user-settings.response.data.records[0].fields.subReddits}
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: POST
      url: "https://oauth.reddit.com/api/submit"
      headers:
        Authorization: "Bearer ${secrets.REDDIT_ACCESS_TOKEN}"
        User-Agent: "Reddit-Reply-Bot/0.1 by Edurata"
        Content-Type: "application/x-www-form-urlencoded"
      data:
        api_type: "json"
        sr: "${each}"
        title: ${generate-post-reddit[0].response}
        kind: "self"
        text: ${generate-post-reddit[1].response}
  post-to-linkedin:
    description: |
      Publishes the formatted post to LinkedIn if the user has enabled LinkedIn in their settings.
    if:
      in:
        - "linkedinPost"
        - ${get-user-settings.response.data.records[0].fields.enabledTargets}
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: POST
      url: "https://api.linkedin.com/v2/shares"
      headers:
        Authorization: "Bearer ${secrets.LINKEDIN_API_KEY}"
      data:
        owner: "urn:li:person:123456789"
        text: ${generate-post-linkedin.response}
  post-to-twitter:
    description: |
      Publishes the formatted post to Twitter/X if the user has enabled Twitter/X in their settings.
    if:
      in:
        - "twitterPost"
        - ${get-user-settings.response.data.records[0].fields.enabledTargets}
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: POST
      url: "https://api.twitter.com/2/tweets"
      headers:
        Authorization: "Bearer ${secrets.TWITTER_BEARER_TOKEN}"
        Content-Type: "application/json"
      data:
        text: ${generate-post-x.response}
  update-airtable:
    description: |
      Updates Airtable with the URLs of the published posts on LinkedIn, Reddit, and Twitter/X and marks the post as processed.
    source:
      repoUrl: "https://github.com/Edurata/edurata-functions.git"
      path: general/axios
    props:
      method: PATCH
      url: "https://api.airtable.com/v0/${inputs.blog_posts_table_id}/${get-latest-unprocessed-post.response.data.records[0].fields.id}"
      headers:
        Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
      body:
        fields:
          linkedinUrl: ${post-to-linkedin.response.url}
          redditUrl: ${post-to-reddit.response.url}
          xUrl: ${post-to-twitter.response.url}
          released: true
