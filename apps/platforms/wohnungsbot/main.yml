name: wg-gesucht-application-bot
apiRevision: edurata.io/v1
description: |
  A bot that scans WG-Gesucht for new flat listings and automatically applies to them based on user-defined preferences.
interface:
  inputs:
    properties:
      userEmail:
        type: string
        description: The email address of the user of the workflow.
      customerTableId:
        type: string
        description: The Airtable table containing customer information (email, CV).
inputs:
  customerTableId: ${variables.applicationConfig.wohnungsbot.peopleTableId}
steps:
  get-customer-details:
    description: "Retrieve customer details (email and CV) from the second Airtable table."
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: general/axios
    props:
      method: GET
      url: "https://api.airtable.com/v0/${inputs.customerTableId}"
      headers:
        Authorization: "Bearer ${secrets.AIRTABLE_API_KEY}"
      params:
        filterByFormula: "email = '${inputs.userEmail}'"
  set-defaults-filter:
    runtime: python3_10
    description: |
      Set default values for the search filter.
    code: |
      from datetime import datetime, timedelta
      def handler(inputs):
          search_params = inputs['search_params']
          today_date = datetime.now().strftime('%Y-%m-%d')
          default_filter = {
              'city_id': 8,
              'rent_max': 1000,
              'room_size_min': 10,
              'only_furnished': False,
              'max_online_time': 1,
              'balcony': False,
              'rm_min': 1,
              'district_codes': '',
              'move_in_earliest': today_date,
              'min_stay_days': 30
          }
          for key, value in default_filter.items():
              if key not in search_params:
                  search_params[key] = value
          return {'filter': search_params}
    props:
      search_params: ${get-customer-details.response.data.records[0].fields}
  search-flat-listings:
    description: |
      Fetch flat listings from WG-Gesucht using the specified search parameters.
    source:
      repoUrl: "https://github.com/Edurata/edurata-workflows.git"
      path: apps/platforms/wohnungsbot/wg-gesucht/search
    props:
      filter: ${set-defaults-filter.filter}
      WG_USERNAME: ${get-customer-details.response.data.records[0].fields.wgUsername}
      WG_PASSWORD: ${get-customer-details.response.data.records[0].fields.wgPassword}
  generate-applications:
    foreach: ${search-flat-listings.listings}
    description: |
      Generate applications for the filtered flat listings with chatgpt
    source:
      repoUrl: https://github.com/Edurata/edurata-functions.git
      path: etl/transform/chatgpt
    props:
      API_KEY: ${secrets.OPENAI_API_KEY}
      systemMessage: |
        "Write a personalized message to apply for the flat listing. Write it in the language of listing description. Also include emoticons. If the name of lister consists of multiple words, use the first word only to make it more personal.

        Take the following information into account:
        - Title: ${each.title}
        - Description: ${each.description}
        - Name of lister: ${each.lister_name}
        - About the applicant: ${get-customer-details.response.data.records[0].fields.applicantDescription}
      message: "Create the message."
  merge-info:
    runtime: python3_10
    description: |
      Merge the flat listings with the generated applications.
    code: |
      def handler(inputs):
          listings = inputs['listings']
          applications = inputs['applications']
          merged_listings = []
          for listing, application in zip(listings, applications):
              merged_listings.append({
                  'listing_url': listing['link'],
                  'recipient_name': listing['lister_name'],
                  'application': application
              })
          return {'merged_listings': merged_listings}
    props:
      listings: "${search-flat-listings.listings}"
      applications: "${generate-applications[*].response}"
  apply-to-listings:  
    description: |
      Automatically apply to the filtered flat listings.
    source:
      repoUrl: "https://github.com/Edurata/edurata-workflows.git"
      path: apps/platforms/wohnungsbot/wg-gesucht/apply
    props:
      WG_USERNAME: ${get-customer-details.response.data.records[0].fields.wgUsername}
      WG_PASSWORD: ${get-customer-details.response.data.records[0].fields.wgPassword}
      application_list: ${merge-info.merged_listings}